[{"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/index.js":"1","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/reportWebVitals.js":"2","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/App.js":"3","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/store.js":"4","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/Homescreen.js":"5","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/Collections.js":"6","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/ProductScreen.js":"7","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/NewArrivalsScreen.js":"8","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/PlaceOrderScreen.js":"9","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/PaymentMethodScreen.js":"10","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/Tops.js":"11","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/ShippingAddressScreen.js":"12","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/NewArrivals.js":"13","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/OtherProductScreen.js":"14","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/OrderScreen.js":"15","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/Navbar.js":"16","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/Search.js":"17","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/Register.js":"18","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/actions/userActions.js":"19","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/Account.js":"20","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/CartScreen.js":"21","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/ForgotPassword.js":"22","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/reducers/userReducers.js":"23","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/reducers/productReducers.js":"24","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/reducers/newArrivalsReducer.js":"25","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/reducers/cartReducers.js":"26","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/reducers/orderReducers.js":"27","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/LoadingBox.js":"28","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/MessageBox.js":"29","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/Product.js":"30","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/data/data.js":"31","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/actions/productActions.js":"32","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/actions/newArrivalsActions.js":"33","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/actions/orderActions.js":"34","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/actions/cartActions.js":"35","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/NewArrival.js":"36","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/CheckoutSteps.js":"37","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/Burger.js":"38","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/Product2.js":"39","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/constants/newArrivalsConstants.js":"40","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/constants/orderConstants.js":"41","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/constants/cartConstants.js":"42","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/constants/productConstants.js":"43","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/constants/userConstants.js":"44","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/LeftNav.js":"45","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/Paypal.js":"46","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/SuccessPayScreen.js":"47","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/OrderHistoryScreen.js":"48","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/ProfileScreen.js":"49","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/PrivateRoute.js":"50","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/ProductSearch.js":"51","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/Shoes.js":"52","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/Accessories.js":"53"},{"size":594,"mtime":1610679237299,"results":"54","hashOfConfig":"55"},{"size":362,"mtime":1610484971566,"results":"56","hashOfConfig":"55"},{"size":6400,"mtime":1611958026544,"results":"57","hashOfConfig":"55"},{"size":3202,"mtime":1611786397116,"results":"58","hashOfConfig":"55"},{"size":8816,"mtime":1611949038563,"results":"59","hashOfConfig":"55"},{"size":2381,"mtime":1611958128281,"results":"60","hashOfConfig":"55"},{"size":5814,"mtime":1611794542793,"results":"61","hashOfConfig":"55"},{"size":3846,"mtime":1610765233088,"results":"62","hashOfConfig":"55"},{"size":8412,"mtime":1611959884965,"results":"63","hashOfConfig":"55"},{"size":2572,"mtime":1611959854368,"results":"64","hashOfConfig":"55"},{"size":1870,"mtime":1611956884534,"results":"65","hashOfConfig":"55"},{"size":4286,"mtime":1611183787069,"results":"66","hashOfConfig":"55"},{"size":2320,"mtime":1611794540814,"results":"67","hashOfConfig":"55"},{"size":5642,"mtime":1611278991641,"results":"68","hashOfConfig":"55"},{"size":10099,"mtime":1611960490211,"results":"69","hashOfConfig":"55"},{"size":3700,"mtime":1611955862278,"results":"70","hashOfConfig":"55"},{"size":3041,"mtime":1611948967767,"results":"71","hashOfConfig":"55"},{"size":5765,"mtime":1611122536162,"results":"72","hashOfConfig":"55"},{"size":6486,"mtime":1611701203984,"results":"73","hashOfConfig":"55"},{"size":4321,"mtime":1611707963943,"results":"74","hashOfConfig":"55"},{"size":6941,"mtime":1611958755165,"results":"75","hashOfConfig":"55"},{"size":1341,"mtime":1610657670466,"results":"76","hashOfConfig":"55"},{"size":2801,"mtime":1611107607908,"results":"77","hashOfConfig":"55"},{"size":3188,"mtime":1611790954919,"results":"78","hashOfConfig":"55"},{"size":1878,"mtime":1610768408744,"results":"79","hashOfConfig":"55"},{"size":4277,"mtime":1611182882965,"results":"80","hashOfConfig":"55"},{"size":5134,"mtime":1611642330690,"results":"81","hashOfConfig":"55"},{"size":224,"mtime":1611468388595,"results":"82","hashOfConfig":"55"},{"size":368,"mtime":1610675042110,"results":"83","hashOfConfig":"55"},{"size":1000,"mtime":1611794537102,"results":"84","hashOfConfig":"55"},{"size":2042,"mtime":1611624702402,"results":"85","hashOfConfig":"55"},{"size":10075,"mtime":1611957849593,"results":"86","hashOfConfig":"55"},{"size":1817,"mtime":1610760837495,"results":"87","hashOfConfig":"55"},{"size":10589,"mtime":1611644807787,"results":"88","hashOfConfig":"55"},{"size":2569,"mtime":1611361926544,"results":"89","hashOfConfig":"55"},{"size":865,"mtime":1610764490638,"results":"90","hashOfConfig":"55"},{"size":601,"mtime":1611181024928,"results":"91","hashOfConfig":"55"},{"size":4475,"mtime":1611960728761,"results":"92","hashOfConfig":"55"},{"size":1093,"mtime":1611269983023,"results":"93","hashOfConfig":"55"},{"size":467,"mtime":1610760158083,"results":"94","hashOfConfig":"55"},{"size":836,"mtime":1611356558790,"results":"95","hashOfConfig":"55"},{"size":395,"mtime":1610836199349,"results":"96","hashOfConfig":"55"},{"size":850,"mtime":1611785993707,"results":"97","hashOfConfig":"55"},{"size":855,"mtime":1611026266027,"results":"98","hashOfConfig":"55"},{"size":2087,"mtime":1611880707046,"results":"99","hashOfConfig":"55"},{"size":3007,"mtime":1611639342182,"results":"100","hashOfConfig":"55"},{"size":154,"mtime":1611633487551,"results":"101","hashOfConfig":"55"},{"size":2590,"mtime":1611696281748,"results":"102","hashOfConfig":"55"},{"size":5682,"mtime":1611706843634,"results":"103","hashOfConfig":"55"},{"size":1098,"mtime":1611703746098,"results":"104","hashOfConfig":"55"},{"size":1226,"mtime":1611791536161,"results":"105","hashOfConfig":"55"},{"size":1885,"mtime":1611957653799,"results":"106","hashOfConfig":"55"},{"size":1915,"mtime":1611957908508,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"buz44r",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"110"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"110"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"110"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"110"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"110"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"110"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"110"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"110"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"110"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"110"},"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/index.js",[],["242","243"],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/reportWebVitals.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/App.js",["244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262"],"//https://fontawesome.com/icons?d=gallery\n//https://www.youtube.com/watch?v=GGkBwpxV7AI\n\n//MIGHT WANT TO ENABLE ESLINT AND PRETTIER\n\n//load products from backend: set proxy in pck.json in frontend\n//when u send a req to API, it gets redirected(proxied) to backend\n//\"proxy\": \"http://127.0.0.1:5000\",\n\n//axios -> library to send ajax req to server\n\n//Add this file in Frontend:  JSCONFIG.JSON:\n//this configuration will make auto import functionallity perfect in ur app\n// {\n//   \"compilerOptions\": {\n//       \"target\": \"es6\"\n//   },\n//   \"exclude\": [\"node_modules\"]\n// }\n\n\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter, Route, Switch, Link} from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n// import data from './data.js'\nimport p2 from './images/p2.jpg';\nimport Homescreen from './Homescreen';\nimport Collections from './Collections';\nimport NewArrivals from './screens/NewArrivals';\nimport Tops from './screens/Tops';\nimport ProductScreen from './screens/ProductScreen';\nimport NewArrivalsScreen from './screens/NewArrivalsScreen';\nimport { signout } from './actions/userActions'\n\n\nimport Search from './components/Search';\nimport Account from './components/Account';\nimport Register from './components/Register';\nimport ForgotPassword from './components/ForgotPassword';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faCheckSquare, faCoffee} from '@fortawesome/free-solid-svg-icons'\nimport {  faFacebookF , faInstagram} from '@fortawesome/free-brands-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons'\n\n// import {  faUser} from '@fortawesome/free-brands-svg-icons';\n\n\nimport { FaPaypal, FaCcVisa, FaUserAlt, FaShoppingCart, FaSearch, FaCartPlus, FaInstagram, FaFacebookF, FaCopyright } from 'react-icons/fa';\nimport { SiVisa } from 'react-icons/si';\nimport CartScreen from './components/CartScreen';\nimport ShippingAddressScreen from './screens/ShippingAddressScreen';\nimport PaymentMethodScreen from './screens/PaymentMethodScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OtherProductScreen from './screens/OtherProductScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport OrderHistoryScreen from './screens/OrderHistoryScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport PrivateRoute from './components/PrivateRoute';\nimport Shoes from './screens/Shoes';\nimport Accessories from './screens/Accessories';\n\n\n\n\nlibrary.add(faStroopwafel)\n\n//fab fa-facebook-f\n\nfunction App(props) {\n  const {name} = props\n\n  return (\n    \n      <BrowserRouter>\n        <div className=\"container\">\n          <h1 className=\"topsaying\">FREE SHIPPING on orders $100+</h1>\n          <Navbar />\n\n          <main>\n            {/* <Route path=\"/:name/:id\" component={ProductScreen}></Route> */}\n            {/* /product/${product._id}/${name} */}\n\n            <Route path=\"/product/:id/:name\" component={ProductScreen}></Route>\n\n            <Route path=\"/collections\" component={Collections}></Route>\n            <Route path=\"/newarrivals\" component={NewArrivals}></Route>\n            <Route path=\"/tops\" component={Tops}></Route>\n            <Route path=\"/shoes\" component={Shoes}></Route>\n            <Route path=\"/accessories\" component={Accessories}></Route>\n\n            {/* <Route path=\"/newarrivalsproducts\" component={NewArrivals}></Route> */}\n\n            {/* <Route path=\"/:name/:id\" component={ProductScreen}></Route> */}\n            {/* <Route path=\"/newarrivals/:id\" component={ProductScreen}></Route> */}\n\n          \n            <Route path=\"/search\" component={Search}></Route>\n            <Route path=\"/account\" component={Account}></Route>\n            <Route path=\"/register\" component={Register} ></Route>\n            <Route path=\"/forgotpassword\" component={ForgotPassword} ></Route>\n\n            {/* Cart Screan. Will have ID of product but its optional so put a question\n            mark. so if user directly goes to cart it will show shopping cart w/out \n            adding a new item to it, thats why we add a question mark */}\n            {/* <Route path=\"/cart/:id?\" component={CartScreen} cartName={cartName}></Route> */}\n            {/* <Route path=\"/cart/:name/:id?\" component={CartScreen} name={name}></Route> */}\n            {/* <Route path=\"/cart/:name?/:id?\" component={CartScreen}></Route> */}\n            <Route path=\"/cart/:id?/:name?\" component={CartScreen}></Route>\n\n            <Route path=\"/shipping\" component={ShippingAddressScreen} ></Route>\n            <Route path=\"/payment\" component={PaymentMethodScreen} ></Route>\n            <Route path=\"/placeorder\" component={PlaceOrderScreen} ></Route>\n            <Route path=\"/order/:id\" component={OrderScreen} ></Route>\n            <Route path=\"/orderhistory\" component={OrderHistoryScreen} ></Route>\n            {/* profile is an authenticated route so instead of route use PrivateRoute\n           component we made  */}\n            <PrivateRoute \n              path=\"/profile\" \n              component={ProfileScreen}>\n            </PrivateRoute>\n\n\n            <Route path=\"/\" component={Homescreen} exact></Route>\n          </main>\n\n          <br />\n          <footer className=\"footer\">\n\n            <div className=\"bottomlinks\">\n              {/* <span style=\"font-size: 3em; color: Tomato;\">\n                <i class=\"fas fa-camera\"></i>\n              </span> */}\n\n              {/* <Link to=\"/collections\">\n                <i class=\"fab fa-facebook-f\"></i>\n              </Link> */}\n\n              {/* <FaCopyright /> */}\n              {/* <FaFacebookF style={{color: 'grey'}}>Facebook</FaFacebookF> */}\n              <FaFacebookF />\n              <FaInstagram />\n              <FaInstagram />\n\n              {/* <FaSearch /> */}\n              {/* <FaCcVisa /> */}\n              {/* <SiVisa /> */}\n            </div>\n\n            <div className=\"bottommessage\"> 2021, Luna Selene Boutique Powered by...\n            </div>\n\n\n            <div className=\"payicons\">\n              <FaPaypal style={{color: 'blue'}} />\n              <i>stripe</i>\n              <FaCcVisa />\n              <FontAwesomeIcon icon={faCoffee} />\n            </div>\n\n          </footer>\n\n        </div>\n\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/store.js",["263","264","265","266"],"//reduxThunk makes it possible to send ajax request in \n//our redux actions\n\nimport {createStore, compose, applyMiddleware, combineReducers} from 'redux'\nimport thunk from 'redux-thunk';\n// import data from \"./data/data\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productDetailsReducer, productListReducer, searchProductReducer } from './reducers/productReducers';\nimport { newArrivalsListReducer, newArrivalsDetailsReducer } from './reducers/newArrivalsReducer';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userDetailsReducer, userRegisterReducer, userSigninReducer, userUpdateProfileReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderMineListReducer, orderPayReducer } from './reducers/orderReducers';\n// import logger from 'redux-logger'\n\n//initial state\nconst initialState = { \n//When u refresh page, it doesnt remember that we are singed in so we need\n  //to keep our singin info in local storage\n  userSignin: {\n    //check localStorage for userInfo\n    userInfo: localStorage.getItem('userInfo') \n    //if exists, convert it to userInfo object\n        ? JSON.parse(localStorage.getItem('userInfo')) \n        : null, //otherwise use null\n},\n    //default value for cart:\n    cart: {\n        //read content of localStorage. This is the value u have used in setItem in\n        //cartActions. \n        cartItems: localStorage.getItem('cartItems') \n            ? JSON.parse(localStorage.getItem('cartItems')) \n            : [],\n        //check local storage for shippingAddress\n        shippingAddress: localStorage.getItem('shippingAddress') \n            ? JSON.parse(localStorage.getItem('shippingAddress'))\n            : {},\n        //default is paypal\n        paymentMethod: 'Paypal'\n\n    }\n}\n\n//Reducer\n//this is used to get STATIC products from a file\n// const reducer = (state, action) => {\n//     //load products in the Redux Store\n//     return {products: data.products}\n// }\n\n//Reducer: combineReducer accepts an object param. this object \n//introduce reducers to Redux store\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    // newArrivalsList: newArrivalsListReducer,\n    // newArrivalsDetails: newArrivalsDetailsReducer\n    cart: cartReducer,\n    userSignin: userSigninReducer,\n    userRegister: userRegisterReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderMineList: orderMineListReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    searchProduct: searchProductReducer\n})\n\n//add redux to ChromeDevTools->update compose funct. if doesnt \\\n//exist use regular compose\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENTION_COMPOSE__ || compose;\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n//store\nconst store = createStore(\n    reducer, \n    initialState, \n    // composeEnhancer(applyMiddleware(thunk))\n    // composeEnhancer(applyMiddleware(logger))\n    composeWithDevTools(applyMiddleware(thunk))\n\n)\n\nexport default store;\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/Homescreen.js",["267","268","269","270","271","272","273"],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios';\nimport { Link} from 'react-router-dom';\nimport mainimg from './images/main.jpg';\nimport welcome from './images/welcome.jpg';\n\nimport main from './images/main.jpg';\n\nimport './App.css';\nimport Product from './screens/Product.js';\nimport LoadingBox from './components/LoadingBox.js';\nimport MessageBox from './components/MessageBox.js';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProducts } from './actions/productActions';\n\n\nimport addToMailchimp from \"gatsby-plugin-mailchimp\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport { Typography } from \"@material-ui/core\"\n\n \n// import data from './data/data.js' ////STATIC DATA\n\n//create ACTION to fetch data from backend\n\nexport default function Homescreen() {\n\n    //BEFORE REDUX:\n\n    //hook for getting data from backend \n    // const [products, setProducts] = useState([]);\n    // const [loading, setLoading] = useState(false);\n    // const [error, setError] = useState(false);\n\n    //fill products\n    //useEffect happens when ComponentDidMount(after rendering) \n    //to page. funct runs after rendering ur component\n    // useEffect(() => {\n    //     //ajax req to backened to fetch products\n    //     const fetchData = async () => {\n    //         try {\n    //             setLoading(true)\n    //             //fetch data from axios request\n    //             const {data} = await axios.get('/api/products')\n    //             setLoading(false)\n    //             setProducts(data)\n    //         } catch(err) {\n    //             setError(err.message)\n    //             setLoading(false)\n    //         }\n    //     }\n    //     fetchData();\n    // }, [])\n\n    // function refreshPage() {\n    //     window.location.reload(false);\n    // }\n\n\n    const [email, setEmail] = useState('')\n\n\n    //REDUX Part:\n\n    // let name = \"products\"\n\n    //define dispatch\n    //dispatch allows u to dispatch any redux action\n    const dispatch = useDispatch();\n\n    //productList from Redux Store\n    //useSelector used to get object from reduxstore\n    const productList = useSelector((state) => state.productList)\n\n    //get 3 values from product list\n    // const { loading, error, products } = productList\n    const { loading, error, products } = productList\n\n    useEffect(() => {\n\n        // refreshPage()\n\n        //dispatch action\n        dispatch(listProducts())\n        // products = Array.from(data);\n\n    }, [dispatch])\n\n    // _handleSubmit = async (e) => {\n    //     e.preventDefault();\n    //     const result = await addToMailchimp(email, listFields)\n    //     // I recommend setting `result` to React state\n    //     // but you can do whatever you want\n    //   }\n    \n    \n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        // if(email) {\n        //     //put in query param\n        //     fetch(`/api/memberadd?email=${email}`)\n        //     .then(res => res.json())\n        //     .then(res => console.log(res))\n        //     .catch(err => console.log(err))\n        // }\n        const result = await addToMailchimp(email)\n        // this.setState({result: result})\n\n    }\n\n    // const handleSubmit = (e) => {\n    //     e.preventDefault();\n    //     // setEmail({})\n    //     addToMailchimp(email) // listFields are optional if you are only capturing the email address.\n    //     .then(data => {\n    //       // I recommend setting data to React state\n    //       // but you can do whatever you want (including ignoring this `then()` altogether)\n    //       console.log(data)\n    //     })\n    //     .catch(() => {\n    //       // unnecessary because Mailchimp only ever\n    //       // returns a 200 status code\n    //       // see below for how to handle errors\n    //     })\n    //     setEmail(\"\") //reset email when done\n    //   }\n    \n\n    return (\n        <div>\n            <br />\n            <div className=\"mainpiccontainer\">\n                <img className=\"mainpic\" src={mainimg} alt=\"\"/>\n            </div>\n\n            <br />\n            \n            <div className=\"shopnowcontainer\">\n                <Link to=\"/collections\" className=\"shopnowlink\" style={{textDecoration: \"none\"}}>\n                    <button className=\"shopnowbutton\">Shop Now</button>\n                </Link>\n            </div>\n\n            {/* <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    label=\"Submit\"\n                    type=\"submit\"\n                    >\n                    <Typography variant=\"button\">Shop Now!</Typography>\n            </Button> */}\n\n            <br />\n            <br />\n            <div className=\"favorites\">\n                <h1>Our Favorites</h1>\n\n                {\n                loading ? (\n                    <></>\n                    // <LoadingBox></LoadingBox>\n                )\n                :\n                error ? (<MessageBox variant=\"danger\">{error}</MessageBox>)\n                : (\n                    <div className=\"favoriterroducts\">\n\n                        {/* { \n                        //products && \n                            products.map((product) => (\n                                    <Product key={product._id} product={product}></Product>\n                                )  \n                        )\n                        } */}\n\n                        {/* {console.log(products)} */}\n\n                        { \n                        //products && \n                            products.map((product) => (\n                                    <Product key={product._id} product={product} name={product.category}></Product>\n                                )  \n                        )\n                        }\n\n                    </div>\n                )\n                }\n\n            </div>\n\n            <br />\n                    {/* PUT ENDPOINT IN GATSBYCONFIG.JS IN ENV VAR!!!! */}\n            <div>\n            {/* <form className=\"suscribeform\" onSubmit={handleSubmit}>\n                <h1>Be the first to get the BizNass!!</h1>\n                <h2>shoot us your email and we will be sure to give you the low down on all the thangs!</h2>\n                <div className=\"formsingleitem\">\n                    <label htmlFor=\"email\"></label>\n                    <input \n                        className=\"forminput suscribeinput3\"\n                        type=\"email\" \n                        id=\"email\" \n                        required \n                        placeholder=\"Your Email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n\n                        // required\n                    ></input>\n                    <div className=\"buttoncontainer\">\n                        <button className=\"formbutton suscribebutton\" type=\"submit\">Subscribe</button>\n                    </div>\n                </div>\n            </form> */}\n\n            <form className=\"form subscribe\" onSubmit={handleSubmit}>\n                <h1>Be the first to get the BizNass!!</h1>\n                <h2>shoot us your email and we will be sure to give you the low down on all the thangs!</h2>\n                <input\n                    className=\"subscribeinput\"\n                    placeholder=\"email\"\n                    id=\"outlined-email-input\"\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    variant=\"\"\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <button\n                    className=\"shopnowbutton\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    label=\"Submit\"\n                    type=\"submit\"\n                    >Subscribe\n                </button>\n            </form>\n\n\n\n            </div>\n\n\n            <br />\n            <div className=\"aboutsection\">\n                <div className=\"aboutstatement\">\n                    <h1 className=\"\">Happy Shopping!</h1>\n                    <p className=\"aboutmessage\">Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi. Aenean fermentum, elit eget tincidunt    </p>\n                </div>\n                <div className=\"aboutimgcontainer\">\n                    <img className=\"aboutpic\" src={welcome} alt=\"\"/>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/Collections.js",["274","275","276","277"],"import React from 'react'\nimport { BrowserRouter, Route, Switch, Link} from 'react-router-dom';\nimport p2 from './images/p2.jpg';\nimport p1 from './images/p1.jpg';\n// import data from './data/data.js'\nimport data from './data/data.js'\n\n\nimport './App.css';\nimport NewArrivals from './screens/NewArrivals';\nimport Homescreen from './Homescreen';\n\n\nexport default function Collections() {\n    return (\n        <div>\n            <h1 style={{textAlign: \"center\"}}>Catelog</h1>\n            <div className=\"collections\">            \n                <div className=\"collectionsproduct\">\n                    <Link to=\"/newarrivals\" className=\"itemname\">\n                        <img className=\"image_prod\" src={p2} alt=\"\"/>\n                        <h1>New Arrivals</h1>\n                    </Link>\n                </div>\n                <div className=\"collectionsproduct\">\n                    <Link to=\"/tops\" className=\"itemname\">\n                        <img className=\"image_prod\" src={p2} alt=\"\"/>\n                        <h1>Tops</h1>\n                    </Link>\n                </div>\n                <div className=\"collectionsproduct\">\n                    <Link to=\"/shoes\" className=\"itemname\">\n                        <img className=\"image_prod\" src={p2} alt=\"\"/>\n                        <h1>Shoes</h1>\n                    </Link>\n                </div>\n                <div className=\"collectionsproduct\">\n                    <Link to=\"/accessories\" className=\"itemname\">\n                        <img className=\"image_prod\" src={p2} alt=\"\"/>\n                        <h1>Accessories</h1>\n                    </Link>\n                </div>\n                <div className=\"collectionsproduct\">\n                    <Link to=\"/t-shirts\" className=\"itemname\">\n                        <img className=\"image_prod\" src={p2} alt=\"\"/>\n                        <h1>T-Shirts</h1>\n                    </Link>\n                </div>\n            </div>\n\n\n          <Switch>\n            {/* <Route path=\"/collections\">\n              <Collections />\n            </Route> */}\n            <Route path=\"/newarrivals\">\n              <NewArrivals />\n            </Route>\n            {/* <Route path=\"/\">\n              <Homescreen />\n            </Route> */}\n            {/* <Route path=\"/collections\">\n              <Collections />\n            </Route> */}\n          </Switch>\n\n        </div>\n    )\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/ProductScreen.js",["278","279","280"],"import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom';\n// import data from '../data/data'\n// import data from '../data/newarrivalsdata.js'\n// import Product from './Product'\n// import data from '../data/data.js'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsProduct, detailsNewArrivals, detailsTops } from '../actions/productActions';\nimport LoadingBox from '../components/LoadingBox.js';\nimport MessageBox from '../components/MessageBox.js';\n\n// import { listProducts } from '../actions/productActions';\n\nexport default function ProductScreen(props) {\n\n\n\n    //from DATA file get product. Find() -> arr funct that find element based on criteria \n    //u define. Get the ID of products inside array.props.match.params.id is the value\n    //':id' part the user enters in the ProductScreen\n\n    //show product from static file in frontend\n    // const product = data.products.find((x) => Number(x._id) === Number(props.match.params.id));\n\n    // //if user enters wrong product ID\n    // if(!product) {  \n    //     return <div>Product Not Found</div>\n    // }\n\n    // const testing = props.location.search \n    //     ? props.location.search.split(\"=\")[1] \n    //     : \"/\";\n    // alert(testing)\n\n    const dispatch = useDispatch();\n\n    //need to fill prouduct ID. this will give us the id inside the url\n    const productId = props.match.params.id;\n    const name = props.match.params.name;\n    console.log(name, productId)\n\n    // const [cartName, setCartName] = useState(name)\n    // console.log('cartName:', cartName)\n\n    const [qty, setQty] = useState(1) //default value for qty=1\n\n    //Load products from produtcDetails from Redux Store\n    const productDetails = useSelector((state) => state.productDetails);\n    const { loading, error, product } = productDetails;\n\n    //need to dispatch detailsProduct in useEffect\n    useEffect(() => {\n      //dispatch details product action\n        dispatch(detailsProduct(productId, name));\n        // dispatch(detailsNewArrivals(productId));\n        // dispatch(detailsTops(productId));\n\n        //empty array just means run dispatch(detailsProduct()); \n        //after mounting our component to the page\n    }, [dispatch, productId, name]); \n\n    //redirects user to cart Screen\n    const addToCartHandler = () => {\n      //changes the routes in ur app.\n      //specify QTY as query string w/ ?=\n      // props.history.push(`/cart/${productId}?qty=${qty}`)\n      props.history.push(`/cart/${productId}/${name}/?qty=${qty}`)\n\n    }\n\n\n  return (\n\n<div className=\"favorites\">\n    {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <div>\n          {/* <Link to=\"/\">Back to result</Link> */}\n          <div className=\"row top\">\n            <div className=\"\">\n              <img\n                className=\"large\"\n                src={product.image}\n                alt={product.name}\n              ></img>\n            </div>\n            <div className=\"col-1\">\n              <ul>\n                <li>\n                  <h1>{product.name}</h1>\n                </li>\n\n                <li>Price : ${product.price}</li>\n                <li>\n                  Description:\n                  <p>{product.description}</p>\n                </li>\n              </ul>\n            </div>\n            <div className=\"col-1\">\n              <div className=\"card card-body\">\n                <ul>\n                  <li>\n                    <div className=\"row\">\n                      <div>Price</div>\n                      <div className=\"price\">${product.price}</div>\n                    </div>\n                  </li>\n                  <li>\n                    <div className=\"row\">\n                      <div>Status</div>\n                      <div>\n                        {product.countInStock > 0 ? (\n                          <span className=\"success\">In Stock</span>\n                        ) : (\n                          <span className=\"danger\">Unavailable</span>\n                        )}\n                      </div>\n                    </div>\n                  </li>\n\n                  {\n                    //only show add to cart button if product in stock\n                  product.countInStock > 0 && (\n                    <>\n                      <li>\n                          <div>Qty</div>\n                          <div>\n                            <select \n                              value={qty} \n                              onChange={e => setQty(e.target.value)}\n                            >\n                              {\n                                //options will go from 1 up to CountInStock\n                                //if countinStock=5 this funct reutuns an array from 0 to \n                                //4 so u can map each item. make it 1 to 5 instead of 0 to 4\n                                [...Array(product.countInStock).keys()].map(x => (\n                                  //key must be unique and x+1 is unique in this case\n                                  <option key={x+1} value={x+1}>{x+1}</option>\n                                ))\n                              }\n                            </select>\n                          </div>\n                      </li>\n                      <li>\n                        <button \n                          onClick={addToCartHandler}\n                          // cartName={cartName}\n                          className=\"primary block\"\n                          >Add to Cart\n                        </button>\n\n\n                      </li>\n                    </>\n                  ) \n                  }\n\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n</div>\n\n    )\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/NewArrivalsScreen.js",["281"],"import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom';\n// import data from '../data/data'\n// import data from '../data/newarrivalsdata.js'\n// import Product from './Product'\n// import data from '../data/data.js'\nimport { useDispatch, useSelector } from 'react-redux';\n// import { detailsProduct } from '../actions/productActions';\n\nimport LoadingBox from '../components/LoadingBox.js';\nimport MessageBox from '../components/MessageBox.js';\nimport { detailsNewArrivals } from '../actions/newArrivalsActions';\n\n// import { listProducts } from '../actions/productActions';\n\nexport default function NewArrivalsScreen(props) {\n\n    const dispatch = useDispatch();\n\n    //need to fill prouduct ID. this will give us the id inside the url\n    const productId = props.match.params.id;\n    // alert(productId)\n\n    //from DATA file get product. Find() -> arr funct that find element based on criteria \n    //u define. Get the ID of products inside array.props.match.params.id is the value\n    //':id' part the user enters in the ProductScreen\n\n    //show product from static file in frontend\n    // const product = data.products.find((x) => Number(x._id) === Number(props.match.params.id));\n\n    // //if user enters wrong product ID\n    // if(!product) {  \n    //     return <div>Product Not Found</div>\n    // }\n\n    //Load products from produtcDetails from Redux Store\n    const newArrivalsDetails = useSelector((state) => state.newArrivalsDetails);\n    const { loading, error, product } = newArrivalsDetails;\n\n    //need to dispatch detailsProduct in useEffect\n    useEffect(() => {\n        // dispatch(detailsProduct(productId));\n        dispatch(detailsNewArrivals(productId));\n\n        //empty array just means run dispatch(detailsProduct()); \n        //after mounting our component to the page\n    }, [dispatch, productId]); \n\n\n    return (\n\n    <div className=\"favorites\">\n        {loading ? (\n            <LoadingBox></LoadingBox>\n        ) : error ? (\n            <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n            <div>\n            <Link to=\"/\">Back to result</Link>\n            <div className=\"\">\n                <div className=\"\">\n                <img\n                    className=\"\"\n                    src={product.image}\n                    alt={product.name}\n                ></img>\n                </div>\n                <div className=\"\">\n                <ul>\n                    <li>\n                    <h1>{product.name}</h1>\n                    </li>\n\n                    <li>Pirce : ${product.price}</li>\n                    <li>\n                    Description:\n                    <p>{product.description}</p>\n                    </li>\n                </ul>\n                </div>\n                <div className=\"\">\n                <div className=\"\">\n                    <ul>\n                    <li>\n                        <div className=\"\">\n                        <div>Price</div>\n                        <div className=\"\">${product.price}</div>\n                        </div>\n                    </li>\n                    <li>\n                        <div className=\"\">\n                        <div>Status</div>\n                        <div>\n                            {product.countInStock > 0 ? (\n                            <span className=\"success\">In Stock</span>\n                            ) : (\n                            <span className=\"danger\">Unavailable</span>\n                            )}\n                        </div>\n                        </div>\n                    </li>\n                    <li>\n                        <button className=\"\">Add to Cart</button>\n                    </li>\n                    </ul>\n                </div>\n                </div>\n            </div>\n            </div>\n        )}\n    </div>\n        \n\n\n    )\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/PlaceOrderScreen.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/PaymentMethodScreen.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/Tops.js",["282","283","284","285","286"],"import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom';\nimport '../App.css';\n// import data from '../data.js'\n// import data from '../data/newarrivalsdata.js'  //STATIC DATA\nimport Product from './Product';\nimport NewArrival from './NewArrival';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport MessageBox from '../components/MessageBox';\nimport LoadingBox from '../components/LoadingBox.js';\nimport { listArrivals, listProducts, listTops } from '../actions/productActions';\n\n\nexport default function Tops(props) {\n\n    let name = \"tops\"\n\n    //REDUX Part:\n\n    //define dispatch\n    //dispatch allows u to dispatch any redux action\n    const dispatch = useDispatch();\n\n    //productList from Redux Store\n    //useSelector used to get object from reduxstore\n    const productList = useSelector((state) => state.productList)\n\n    //get 3 values from product list\n    const { loading, error, products } = productList\n\n    useEffect(() => {\n        //dispatch action\n        dispatch(listTops())\n    }, [dispatch])\n    // }, [])\n\n\n    return (\n        <div className=\"favorites\">\n            <h1>Tops</h1>\n            <div className=\"favorites\">\n\n\n                {\n                    loading ? (<LoadingBox></LoadingBox>)\n                    :\n                    error ? (<MessageBox variant=\"danger\">{error}</MessageBox>)\n                    : (\n                        <div className=\"favoriterroducts\">\n                            { \n                                products.map((product) => (\n                                        <Product key={product._id} product={product} name={name}></Product>\n                                    )  \n                            )\n                            }\n                        </div>\n                    )\n                }\n\n\n\n            </div>\n        </div>\n    )\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/ShippingAddressScreen.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/NewArrivals.js",["287","288","289","290","291"],"import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom';\nimport '../App.css';\n// import queryString from 'query-string';\n// import data from '../data.js'\n// import data from '../data/newarrivalsdata.js'  //STATIC DATA\nimport Product from './Product';\nimport NewArrival from './NewArrival';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listNewArrivals } from '../actions/newArrivalsActions';\nimport MessageBox from '../components/MessageBox';\nimport LoadingBox from '../components/LoadingBox.js';\nimport { listArrivals, listProducts } from '../actions/productActions';\n\n\nexport default function NewArrivals(props) {\n\n    // const [name, setName] = useState('newarrivals')\n    let name = \"newarrivals\"\n    // alert(name)\n    // let url = props.location.search;\n    // let params = queryString.parse(url);\n    // console.log(params);\n\n    //REDUX Part:\n\n    //define dispatch\n    //dispatch allows u to dispatch any redux action\n    const dispatch = useDispatch();\n\n    //productList from Redux Store\n    //useSelector used to get object from reduxstore\n    const productList = useSelector((state) => state.productList)\n\n    //get 3 values from product list\n    const { loading, error, products } = productList\n\n    useEffect(() => {\n        //dispatch action\n        dispatch(listArrivals())\n    }, [dispatch])\n    // }, [])\n\n    return (\n        // <div>\n            // <div className=\"favorites\">\n            <div className=\"favorites\">\n\n                <h1 style={{textAlign: \"center\"}}>New Arrivals</h1>\n\n\n                {\n                    loading ? (<LoadingBox></LoadingBox>)\n                    :\n                    error ? (<MessageBox variant=\"danger\">{error}</MessageBox>)\n                    : (\n                        <div className=\"favoriterroducts\">\n                            \n                        {/* <div className=\"\"> */}\n\n                            { \n                                products.map((product) => (\n                                        <Product key={product._id} product={product} name={name}></Product>\n                                    )  \n                            )\n                            }\n                        </div>\n                    )\n                }\n\n            </div>\n        // </div>\n    )\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/OtherProductScreen.js",["292","293","294","295","296"],"//TEST\nimport React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom';\n// import data from '../data/data'\n// import data from '../data/newarrivalsdata.js'\n// import Product from './Product'\n// import data from '../data/data.js'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsProduct, detailsNewArrivals, detailsTops } from '../actions/productActions';\nimport LoadingBox from '../components/LoadingBox.js';\nimport MessageBox from '../components/MessageBox.js';\n\n// import { listProducts } from '../actions/productActions';\n\nexport default function OtherProductScreen(props) {\n    const {name} = props\n    // alert(name)\n\n    //from DATA file get product. Find() -> arr funct that find element based on criteria \n    //u define. Get the ID of products inside array.props.match.params.id is the value\n    //':id' part the user enters in the ProductScreen\n\n    //show product from static file in frontend\n    // const product = data.products.find((x) => Number(x._id) === Number(props.match.params.id));\n\n    // //if user enters wrong product ID\n    // if(!product) {  \n    //     return <div>Product Not Found</div>\n    // }\n\n    // const testing = props.location.search \n    //     ? props.location.search.split(\"=\")[1] \n    //     : \"/\";\n    // alert(testing)\n\n    const dispatch = useDispatch();\n\n    //need to fill prouduct ID. this will give us the id inside the url\n    const productId = props.match.params.id;\n\n    const [qty, setQty] = useState(1) //default value for qty=1\n\n    //Load products from produtcDetails from Redux Store\n    const productDetails = useSelector((state) => state.productDetails);\n    const { loading, error, product } = productDetails;\n\n    //need to dispatch detailsProduct in useEffect\n    useEffect(() => {\n\n        // dispatch(detailsOtherProducts(productId, name));\n        \n        // dispatch(detailsNewArrivals(productId));\n        // dispatch(detailsTops(productId));\n\n        //empty array just means run dispatch(detailsProduct()); \n        //after mounting our component to the page\n    }, [dispatch, productId]); \n\n    //redirects user to cart Screen\n    const addToCartHandler = () => {\n      //changes the routes in ur app.\n      //specify QTY as query string w/ ?=\n      props.history.push(`/cart/${productId}?qty=${qty}`)\n    }\n\n\n  return (\n\n<div className=\"favorites\">\n    {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <div>\n          {/* <Link to=\"/\">Back to result</Link> */}\n          <div className=\"row top\">\n            <div className=\"col-2\">\n              <img\n                className=\"large\"\n                src={product.image}\n                alt={product.name}\n              ></img>\n            </div>\n            <div className=\"col-1\">\n              <ul>\n                <li>\n                  <h1>{product.name}</h1>\n                </li>\n\n                <li>Price : ${product.price}</li>\n                <li>\n                  Description:\n                  <p>{product.description}</p>\n                </li>\n              </ul>\n            </div>\n            <div className=\"col-1\">\n              <div className=\"card card-body\">\n                <ul>\n                  <li>\n                    <div className=\"row\">\n                      <div>Price</div>\n                      <div className=\"price\">${product.price}</div>\n                    </div>\n                  </li>\n                  <li>\n                    <div className=\"row\">\n                      <div>Status</div>\n                      <div>\n                        {product.countInStock > 0 ? (\n                          <span className=\"success\">In Stock</span>\n                        ) : (\n                          <span className=\"danger\">Unavailable</span>\n                        )}\n                      </div>\n                    </div>\n                  </li>\n\n                  {\n                    //only show add to cart button if product in stock\n                  product.countInStock > 0 && (\n                    <>\n                      <li>\n                        <div>\n                          <div>Qty</div>\n                          <div>\n                            <select \n                              value={qty} \n                              onChange={e => setQty(e.target.value)}\n                            >\n                              {\n                                //options will go from 1 up to CountInStock\n                                //if countinStock=5 this funct reutuns an array from 0 to \n                                //4 so u can map each item. make it 1 to 5 instead of 0 to 4\n                                [...Array(product.countInStock).keys()].map(x => (\n                                  //key must be unique and x+1 is unique in this case\n                                  <option key={x+1} value={x+1}>{x+1}</option>\n                                ))\n                              }\n                            </select>\n                          </div>\n                        </div>\n                      </li>\n                      <li>\n                        <button \n                          onClick={addToCartHandler}\n                          className=\"primary block\"\n                          >Add to Cart\n                        </button>\n                      </li>\n                    </>\n                  ) \n                  }\n\n                  \n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n</div>\n        \n\n\n    )\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/OrderScreen.js",["297","298","299"],"import React, { useEffect, useState, useRef } from 'react';\nimport Axios from 'axios';\n\n// import {PayPalButton} from 'react-paypal-button-v2';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { detailsOrder, payOrder } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport Paypal from './Paypal';\nimport { ORDER_PAY_RESET } from '../constants/orderConstants';\n\n\nexport default function OrderScreen(props) {\n\n    //state if ur going to checkout or not\n    const [checkout, setCheckout] = useState(false);\n\n    //grab paypal button from index.html. access from useRef\n    const paypal = useRef()\n\n    //hook to get status of paypal SDK\n    // const [sdkReady, setSdkReady] = useState(false);\n\n\n    const orderId = props.match.params.id;\n    const orderDetails = useSelector((state) => state.orderDetails);\n    const { order, loading, error } = orderDetails;\n\n    //get orderPay from redux\n    const orderPay = useSelector((state) => state.orderPay);\n    //rename error to errorPay\n    const {\n        loading: loadingPay,\n        error: errorPay, \n        success: successPay,\n    } = orderPay;\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        // dispatch(detailsOrder(orderId));\n        // const addPayPalScript = async () => {\n        //     const { data } = await Axios.get('/api/config/paypal');\n        //     // const { data } = await Axios.get('/config/paypal');\n\n        //     const script = document.createElement('script');\n        //     script.type = 'text/javascript';\n        //     script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\n        //     script.async = true;\n        //     script.onload = () => {\n        //       setSdkReady(true);\n        //     };\n        //     document.body.appendChild(script);\n        //   };\n        //   if (!order) {\n        //     dispatch(detailsOrder(orderId));\n        //   } else {\n        //     if (!order.isPaid) {\n        //       if (!window.paypal) {\n        //         addPayPalScript();\n        //       } else {\n        //         setSdkReady(true);\n        //       }\n        //     }\n        //   }\n\n\n        //if order not found or successPay true, refresh page so need to\n        //run DetailsOrder again to get new Status of order (Paid or not).\n        //Another condition\n        //or order exists but order._id =! orderId(order in \n        //the URL). In this situation need to refresh the page, and update \n        //the page based on the new order\n        if (!order || successPay || (order && order._id !== orderId)) {\n            //reset orderPay to get rid of infinite loop\n            dispatch({type: ORDER_PAY_RESET});\n            dispatch(detailsOrder(orderId));\n          } else {\n            if (!order.isPaid) {\n              if (!window.paypal) {\n                // addPayPalScript();\n                return (\n                    <Paypal />\n                )\n                \n              } else {\n                // setSdkReady(true);\n                setCheckout(true);\n                // setCheckout(false);\n\n              }\n            }\n          }\n\n        //   if (order.isPaid === true) {\n        //     window.location.reload();\n        //   }\n\n\n\n    // }, [dispatch, order]);\n\n    }, [dispatch, order, orderId, checkout, successPay]);\n\n    // }, [dispatch, order, orderId, sdkReady]);\n\n\n    // const successPaymentHandler = (paymentResult) => {\n    //     //dispatch payorder action\n    //     //paymentResult is the reuslt of ur payment on paypal\n    //     dispatch(payOrder(order, paymentResult))\n    // }\n\n    // const setCheckout = () => {\n    //     if (successPay) {\n\n    //     }\n    // }\n\n\n    return loading ? (\n    <LoadingBox></LoadingBox>\n    ) : error ? (\n    <MessageBox variant=\"danger\">{error}</MessageBox>\n    ) : (\n    <div className=\"orderscreen\">\n        <h1 style={{textAlign: \"center\"}}>Order {order._id}</h1>\n        <div className=\"placeorderscreen\">\n            <div className=\"col-2 orderleft\">\n                <ul>\n                    <li>\n                        <div className=\"card card-body\">\n                        <h2>Shipping</h2>\n                        <p>\n                            <strong>Name:</strong> {order.shippingAddress.fullName} <br />\n                            <strong>Address: </strong> {order.shippingAddress.address},\n                            {order.shippingAddress.city},{' '}\n                            {order.shippingAddress.postalCode},\n                            {order.shippingAddress.country}\n                        </p>\n                        {order.isDelivered ? (\n                            <MessageBox variant=\"success\">\n                            Delivered at {order.deliveredAt}\n                            </MessageBox>\n                        ) : (\n                            <MessageBox variant=\"danger\">Not Delivered</MessageBox>\n                        )}\n                        </div>\n                    </li>\n                    <li>\n                        <div className=\"card card-body\">\n                        <h2>Payment</h2>\n                        <p>\n                            <strong>Method:</strong> {order.paymentMethod}\n                        </p>\n                        {order.isPaid ? (\n                            <MessageBox variant=\"success\">\n                                Paid at {order.paidAt}\n                            </MessageBox>\n                        ) : (\n                            <MessageBox variant=\"danger\">Not Paid</MessageBox>\n                        )}\n                        </div>\n                    </li>\n                    <li>\n                        <div className=\"card card-body\">\n                        <h2>Order Items</h2>\n                            <ul style={{listStyle: \"none\"}}>\n                                {order.orderItems.map((item) => (\n                                <li key={item.product}>\n                                    <div className=\"row\">\n                                    <div>\n                                        <img\n                                        src={item.image}\n                                        alt={item.name}\n                                        className=\"small\"\n                                        ></img>\n                                    </div>\n                                    <div className=\"min-30\">\n                                        <Link to={`/product/${item.product}`}>\n                                        {item.name}\n                                        </Link>\n                                    </div>\n\n                                    <div>\n                                        {item.qty} x ${item.price} = ${item.qty * item.price}\n                                    </div>\n                                    </div>\n                                </li>\n                                ))}\n                            </ul>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n            <div className=\"col-1\">\n                <div className=\"card card-body\">\n                    <ul style={{listStyle: \"none\"}}>\n                        <li>\n                            <h2>Order Summary</h2>\n                        </li>\n                        <li>\n                            <div className=\"row\">\n                                <div>Items</div>\n                                <div>${order.itemsPrice.toFixed(2)}</div>\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"row\">\n                                <div>Shipping</div>\n                                <div>${order.shippingPrice.toFixed(2)}</div>\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"row\">\n                                <div>Tax</div>\n                                <div>${order.taxPrice.toFixed(2)}</div>\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"row\">\n                                <div>\n                                    <strong> Order Total</strong>\n                                </div>\n                                <div>\n                                    <strong>${order.totalPrice.toFixed(2)}</strong>\n                                </div>\n                            </div>\n                        </li>\n\n\n\n                        {\n                            //if ur on checkout page render paypal comp\n                            checkout ? (\n                                <>\n                                    {errorPay && (<MessageBox variant=\"danger\">{errorPay}</MessageBox>)}\n                                    \n                                    {loadingPay && <LoadingBox></LoadingBox>}\n\n                                    <Paypal \n                                        order={order}\n                                        // checkout={checkout}\n                                        // setCheckout={setCheckout}\n                                        // disabled={order.isPaid} \n                                        // onSuccess={successPaymentHandler}\n                                    />\n                                </>\n                            ) : (\n                            // else render paypal checkout button \n                            <button\n                                // when u click button go to checkout page\n                                onClick={() => setCheckout(true)}\n                                disabled={order.isPaid} //disable button if order isPaid\n                                >Checkout\n                            </button>\n                            )\n                        }\n\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    );\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/Navbar.js",["300","301","302","303","304","305","306","307","308","309","310","311"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport Burger from './Burger'\nimport CartScreen from './CartScreen'\nimport { BrowserRouter, Route, Switch, Link} from 'react-router-dom';\nimport { signout } from '../actions/userActions'\n\nimport Account from './Account';\nimport Search from './Search';\nimport { FaPaypal, FaCcVisa, FaUserAlt, FaShoppingCart, FaSearch, FaCartPlus, FaInstagram, FaFacebookF, FaCopyright } from 'react-icons/fa';\n\n\nexport default function Navbar() {\n\n    // function refreshPage() {\n    //     window.location.reload(false);\n    //   }\n\n    //Add a Badge on Cart to show how many items in there\n    //get access to cartItems from Redux\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart; \n\n    // display Users name up top after they sign in (instead of Signin)\n    const userSignin = useSelector(state => state.userSignin)\n    const { userInfo } = userSignin; \n\n    const dispatch = useDispatch();\n\n    const signoutHandler = () => {\n        //signout action\n        dispatch(signout())\n    }\n\n    return (\n        <div className=\"Navbar\">\n            <Burger />\n\n            <Link className=\"homepicbutton\" to=\"/\">Logo\n                {/* <button>LunaSeleneBoutique</button> */}\n            </Link>\n            {/* <h2 className=\"homepic\">LunaSeleneBoutique</h2> */}\n            {/* <Account/> */}\n\n\n            <div className={userInfo ? 'topiconssignedin' : 'topiconsnosignedin'}>\n                {\n                    userInfo ? (\n                        \n                        <div className=\"topicon dropdown\">\n                            <div className=\"dropdown-select\">\n                                <FaUserAlt className=\"individualicon\" style={{color: 'black'}}/>\n                            </div>\n                            <div className=\"dropdown-list\">\n                                <Link to=\"/profile\" className=\"dropdown-list__item\">User Profile</Link>\n                                <Link to=\"/orderhistory\" className=\"dropdown-list__item\">Order History</Link>\n                                <Link\n                                        to=\"#signout\"\n                                        className=\"dropdown-list__item\"\n                                        onClick={signoutHandler}\n                                        >SignOut\n                                </Link>\n                            </div>\n                        </div>\n                    ) : \n                    (\n                        <div className=\"topicon\">\n                            <Link className=\"topicon\" to=\"/account\">\n                                <FaUserAlt className=\"individualicon\" style={{color: 'black'}}/>\n                            </Link> \n                        </div>\n                    )\n                }\n                \n                <div className={userInfo ? 'carticon' : 'topicon'}>\n                    <Link className=\"\" to=\"/search\">\n                        <FaSearch className=\"individualicon\" style={{color: 'black'}}/>\n                    </Link>\n                </div>\n\n                <div className=\"topicon\">\n                    <Link className=\"\" to=\"/cart\">\n                        {/* {cartItems.length > 0 && (\n                            <span className=\"badge\">{cartItems.length}</span>\n                        )} */}\n                        <FaShoppingCart style={{color: 'black'}}/>\n                            {cartItems.length > 0 && (\n                                <span className=\"badge\">{cartItems.length}</span>\n                            )}\n                    </Link>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/Search.js",["312","313","314","315","316","317"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { searchAllProducts } from '../actions/productActions'\nimport ProductSearch from './ProductSearch.js'\nimport Product from '../screens/Product'\nimport LoadingBox from './LoadingBox.js';\nimport MessageBox from './MessageBox.js';\n\nrequire(\"es6-promise\").polyfill()\nrequire(\"isomorphic-fetch\")\n\nexport default function Search() {\n    const [searchname, setSearchname] = useState(\"\")\n    const [data, setData] = useState([])\n    // const [searchedProducts, setSearchedProducts] = useState([])\n    // const [products, setProducts] = useState([])\n\n    //query filer\n    const [query, setQuery] = useState(\"\")\n\n    const dispatch = useDispatch();\n    const searchProduct = useSelector((state) => state.searchProduct)\n    const { loading, error, products } = searchProduct\n    \n\n    const submitHandler = (e) => {\n        //when user click on sign in button this will prevent form from \n        //refreshing. This is what we want bc we will use AJAX request to sign\n        // in user\n        e.preventDefault()\n        dispatch(searchAllProducts(searchname))\n    }\n\n    useEffect(() => {\n        // dispatch(searchAllProducts(searchname))\n        // fetch(\"http://localhost:5000/api/getallproducts\")\n        //     //promise\n        //     .then((response) => response.json())\n        //     .then((searchedProducts) => setSearchedProducts(searchedProducts))\n        // const name = products.name\n    }, [products])\n    \n\n    return (\n        <div>\n            <form className=\"form\" onSubmit={submitHandler}>\n                <h2>Search our Store</h2>\n                <label htmlFor=\"searchname\"></label>\n                <input \n                    className=\"forminput\"\n                    type=\"text\" \n                    id=\"searchname\" \n                    placeholder=\"search\"\n                    // email is required if using HTML5 validation system\n                    onChange={e => setSearchname(e.target.value)}>\n                </input>\n                <button \n                    className=\"formbutton\" \n                    type=\"submit\"\n                    >Search\n                </button>\n            </form>                  \n            <div className=\"favorites\">\n                {\n                loading ? (\n                    <></>\n                    // <LoadingBox></LoadingBox>\n                )\n                :\n                error ? (<MessageBox variant=\"danger\">{error}</MessageBox>)\n                : (\n                    <div className=\"favoriterroducts\">\n                        { \n                        //products && \n                            products.map((product) => (\n                                    <Product key={product._id} product={product} name={product.category}></Product>\n                                )  \n                        )\n                        }\n                    </div>\n                )\n                }\n\n            </div>\n            \n        </div>\n    )\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/Register.js",["318","319"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { register } from '../actions/userActions'\n\nimport { Link } from 'react-router-dom'\n\n\nexport default function Register(props) {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [firstname, setFirstName] = useState('')\n    const [lastname, setLastName] = useState('')\n\n    //redirect user to the HOME screen after clicking Register button.\n    //check Query String and return it. split str by \"=\" and get 2nd item. \n    //if doesn't exist return home screen (\"/\"). \n    const redirect = props.location.search \n        ? props.location.search.split(\"=\")[1] \n        : \"/\";\n\n    //Get userInfo from REdux store\n    const userRegister = useSelector((state) => state.userRegister)\n    //get userInfo from userSignin\n    const { userInfo, loading, error } = userRegister;\n\n    //get dispatch from he useDispatch Hook in react-redux\n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        //when user click on sign in button this will prevent form from \n        //refreshing. This is what we want bc we will use AJAX request to sign\n        // in user\n        e.preventDefault() \n        if(password !== confirmPassword) {\n            alert('Passwords do not match')\n        } else {\n            dispatch(register(firstname, lastname, email, password))\n        }\n    }\n\n    //Use Redirect in USEEffect. After dispatching Signin action userInfo will \n    //be filled. \n    useEffect(() => {\n        //accept 2 param(funct that hsould be called), 2nd=array of dependecies\n        //check userInfo contains a value means login was successfull\n        if (userInfo) {\n            //redirect user to the redirect var. \n            //to redirect use: props.history.push\n            props.history.push(redirect);\n        }\n        //dependency=userInfo bc by default userInfo is null bc user is not \n        //signed in, but after disapatching this action userInfo contains a \n        //value. bc the value of userInfo changed, the UseEffect funct will run\n        //and user will be redirected to the Home page OR the Redirect \n        //Query String\n    }, [props.history, redirect, userInfo])\n\n    return (\n    <div>\n        <form className=\"form\" onSubmit={submitHandler}>\n            <div>\n                <h1>Register</h1>\n            </div>\n            <div>\n                    <label htmlFor=\"firstname\"></label>\n                    <input \n                        className=\"forminput\"\n                        type=\"text\" \n                        id=\"firstname\" \n                        placeholder=\"First Name\"\n                        // email is required if using HTML5 validation system\n                        required\n                        onChange={e => setFirstName(e.target.value)}>\n                    </input>\n                </div> \n                <div>\n                    <label htmlFor=\"lastname\"></label>\n                    <input \n                        className=\"forminput\"\n                        type=\"text\" \n                        id=\"lastname\" \n                        placeholder=\"Last Name\"\n                        // email is required if using HTML5 validation system\n                        required\n                        onChange={e => setLastName(e.target.value)}>\n                    </input>\n                </div> \n\n                <div>\n                    <label htmlFor=\"email\"></label>\n                    <input \n                        className=\"forminput\"\n                        type=\"email\" \n                        id=\"email\" \n                        placeholder=\"Enter email\"\n                        // email is required if using HTML5 validation system\n                        required\n                        onChange={e => setEmail(e.target.value)}>\n                    </input>\n                </div> \n                <div>\n                    <label htmlFor=\"password\"></label>\n                    <input \n                        className=\"forminput\"\n                        type=\"password\" \n                        id=\"password\" \n                        placeholder=\"Enter password\"\n                        // email is required if using HTML5 validation system\n                        required\n                        onChange={e => setPassword(e.target.value)}>\n                    </input>\n                </div> \n                <div>\n                    <label htmlFor=\"confirmPassword\"></label>\n                    <input \n                        className=\"forminput\"\n                        type=\"password\" \n                        id=\"confirmPassword\" \n                        placeholder=\"Enter Confirm Password\"\n                        // email is required if using HTML5 validation system\n                        required\n                        onChange={e => setConfirmPassword(e.target.value)}>\n                    </input>\n                </div> \n                <div>\n                    {/* <label /> */}\n                    {/* type=\"submit\" so when user clicks Submit button then \n                    submitHandler will run */}\n                    <button \n                        className=\"formbutton\" \n                        type=\"submit\"\n                        >Create\n                    </button>\n            </div>\n            {/* <Link to=\"/account\"><h3>Sign In</h3></Link> */}\n            <Link to={`/account?redirect=${redirect}`}><h3>Sign In</h3></Link>\n\n            <Link to=\"/\"><h3>Return to Store</h3></Link>\n            <Link to=\"/forgotpassword\"><h3>Forgot your password?</h3></Link>\n        </form>\n    </div>\n    )\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/actions/userActions.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/Account.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/CartScreen.js",["320","321"],"import React, {useState, useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\nimport MessageBox from './MessageBox';\n// import CartNav from './CartNav'\n\nexport default function CartScreen(props) {\n\n    //get productID, name, Qty from the URL. just like u did in productScreen\n    const name = props.match.params.name;\n    const productId = props.match.params.id;\n    //since Qty is a query string, getting it is more tricky\n    //const qty = props.location.search  --> returns value after question mark\n    //split by equal sign and get 2nd value\n    //if doesnt exist default value for qty=1\n    const qty = props.location.search \n        ? Number(props.location.search.split('=')[1]) \n        : 1;\n\n    //access cart from store\n    const cart = useSelector((state) => state.cart)\n    console.log(cart)\n    const {cartItems} = cart\n    console.log(cartItems)\n    const dispatch = useDispatch();\n\n    //if productId exists call AddToCart Action to add the product to Cart.Since u\n    //do it only ONE TIME use USEEFFECT\n    useEffect(() => {\n        if(productId) {\n            dispatch(addToCart(productId, qty, name));\n        }\n    }, [dispatch, productId, qty])\n\n    //\n    const removeFromCartHandler = (id) => {\n        //delete action\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        //redirect user to SignIn screen(ACCOUNT=SIGNIN SCREEN!)\n        //changes the routes in ur app.\n        //after singin user should be redirect to shipping screen\n        props.history.push('/account?redirect=shipping')\n    }\n\n    return (\n        <div className=\"shoppingcart\">\n            <div className=\"shoppingcartrow\">\n                <h1>Shopping Cart</h1>\n                <br />\n                {\n                //no items in cart show a link to go shopping\n                cartItems.length === 0 ? (\n                    <MessageBox>Cart is Empty\n                        <Link to=\"/\">Go Shopping</Link>\n                    </MessageBox>)\n                //otherwise we have items in shpping cart. show them. Make 3 columns\n                :\n                (\n                    <ul className=\"cartitems\">\n                        {\n                            cartItems.map((item) => (\n                                <li key={item.product} className=\"rowitem\">\n\n                                    {/*1: item image */}\n                                    <div className=\"\">\n                                        {/* <div> */}\n                                        <img \n                                            src={item.image} \n                                            alt={item.name} \n                                            className=\"smallimg\">\n                                        </img>\n                                        {/* </div> */}\n                                    </div>\n                                    \n                                    {/*2: item name */}\n                                    <div className=\"\">\n                                        <Link to={`product/${item.product}`}>{item.name}</Link>\n                                    </div>\n\n                                    {/*3: item quantity */}\n                                    <div className=\"\">\n                                        {/* item.product is the ID of current product */}\n                                        <select \n                                            value={item.qty} \n                                            onChange={(e) => \n                                                dispatch(\n                                                    addToCart(item.product, Number(e.target.value))\n                                                \n                                                )\n                                            }\n                                        >\n                                            {\n                                                //options will go from 1 up to CountInStock\n                                                //if countinStock=5 this funct reutuns an array from 0 to \n                                                //4 so u can map each item. make it 1 to 5 instead of 0 to 4\n                                                [...Array(item.countInStock).keys()].map(x => (\n                                                //key must be unique and x+1 is unique in this case\n                                                <option key={x+1} value={x+1}>{x+1}</option>\n                                                ))\n                                            }\n                                        </select>\n                                    </div>\n\n                                    {/*4: item price */}\n                                    <div>${item.price}</div>\n\n                                    {/*5: delete item button */}\n                                    <div>\n                                        <button\n                                            className=\"formbutton\"\n                                            type=\"button\" \n                                            onClick={() => removeFromCartHandler(item.product)}\n                                            >Delete\n                                        </button>\n                                    </div>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                    )\n                }\n            </div>\n            {/* cols=\"30\" rows=\"6\" */}\n            <div>\n                <h2>Special Instructions for Seller</h2>\n                <textarea className=\"sellerinstructions\"></textarea>\n            </div>\n\n            <div>\n                <div className=\"\">\n                    <ul className=\"cartbottom\">\n                        <li className=\"\">\n                            <h2 className=\"\">\n                                {/* show number of items and total price */}\n                                Subtotal ({cartItems.reduce((a, c) => a + c.qty, 0)} items) : $\n                                {cartItems.reduce((a, c) => a + c.price * c.qty, 0)}\n                            </h2>\n                        </li>\n                        <li className=\"\">\n                            {/* Checkout button */}\n                            <button \n                                type=\"formbutton\" \n                                onClick={checkoutHandler} \n                                className=\"checkoutbutton\"\n                                disabled={cartItems.length===0}\n                                >Proceed to Checkout\n                            </button>\n                        </li>\n                    </ul>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/ForgotPassword.js",["322","323"],"import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function ForgotPassword() {\n\n    const [email, setEmail] = useState('')\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n    }\n\n    return (\n    <div>\n        <form className=\"form\" onSubmit={submitHandler}>\n            <h2>Reset your password</h2>\n            <h3>We will send you an email to reset your password.</h3>\n            <div>\n                {/* must use htmlFor for react apps */}\n                <label htmlFor=\"email\"></label>\n                <input \n                    type=\"email\" \n                    id=\"email\" \n                    placeholder=\"Enter email\"\n                    // email is required if using HTML5 validation system\n                    required\n                    onChange={e => setEmail(e.target.value)}>\n                </input>\n            </div> \n            <div>\n                {/* <label /> */}\n                {/* type=\"submit\" so when user clicks Submit button then \n                submitHandler will run */}\n                <button \n                    className=\"primary\" \n                    type=\"submit\"\n                    >Submit\n                </button>\n            </div>\n            <Link to=\"/account\"><h3>Cancel</h3></Link>\n        </form>\n    </div>\n    )\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/reducers/userReducers.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/reducers/productReducers.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/reducers/newArrivalsReducer.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/reducers/cartReducers.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/reducers/orderReducers.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/LoadingBox.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/MessageBox.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/Product.js",["324"],"import React, {useState} from 'react'\nimport { Link } from 'react-router-dom'\n// import data from '../data/data.js'\n\n\nexport default function Product(props) {\n    const {product} = props\n    const {name} = props //newarrivals\n\n    return (\n        <div key={product._id} className=\"product\">\n            {/* <Link to={`/product/${product._id}`}> */}\n            {/* <Link to={`/productscreen/${product._id}`} id={id}> */}\n\n\n            {/* <Link to={`/${name}/${product._id}`}> */}\n            <Link to={`/product/${product._id}/${name}`}>\n\n\n                <img className=\"image_prod\" src={product.image} alt={product.name}/>\n                <div className=\"itemstuff\">\n                    <h1 className=\"itemname\">{product._id}</h1>-\n                    <h1 className=\"itemname\">{product.name}</h1>-\n                    <h2 className=\"itemname\">{product.price}</h2>\n                    <h2 className=\"itemname\">{name}</h2>\n                </div>\n            </Link>  \n        </div>       \n    )\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/data/data.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/actions/productActions.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/actions/newArrivalsActions.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/actions/orderActions.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/actions/cartActions.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/NewArrival.js",["325"],"import React, {useState} from 'react'\nimport { Link } from 'react-router-dom'\n// import data from '../data/data.js'\n\n\nexport default function NewArrival(props) {\n    const {product} = props\n\n    // const [id, setId] = useState([product.id]);\n    // const id = product._id\n\n    return (\n        <div key={product._id} className=\"product\">\n            <Link to={`/newarrivals/${product._id}`}>\n            {/* <Link to={`/productscreen/${product._id}`} id={id}> */}\n                <img className=\"image_prod\" src={product.image} alt={product.name}/>\n                <div className=\"itemstuff\">\n                    <h1 className=\"itemname\">{product._id}</h1>-\n                    <h1 className=\"itemname\">{product.name}</h1>-\n                    <h2 className=\"itemname\">{product.price}</h2>\n                </div>\n            </Link>  \n        </div>       \n    )\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/CheckoutSteps.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/Burger.js",["326","327"],"\n//useState for animations on burger\n//https://letsbuildui.dev/articles/building-a-dropdown-menu-component-with-react-hooks\n\nimport React, {useRef, useState, useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link} from 'react-router-dom';\nimport { FaSearch } from 'react-icons/fa';\n\n\nimport LeftNav from './LeftNav'\n\nexport default function Burger() {\n\n    //If user is signed in will display users Name and also a link to Logout\n    const userSignin = useSelector(state => state.userSignin)\n    const { userInfo } = userSignin; \n\n    const dropdownRef = useRef(null);\n    const [isActive, setIsActive] = useState(false);\n    const onClick = () => setIsActive(!isActive);\n\n    useEffect(() => {\n        //determine if the event target (i.e., the element that was clicked\n        //  on) is a descendent of the dropdown menu itself. If it is, do \n        //  nothing. Otherwise, we want to close the dropdown. This is where\n        //the dropdownRef constant comes in. Since a ref is a reference to a\n        //DOM element, we're able to determine this.\n        const pageClickEvent = (e) => {\n            // console.log(e);\n              // If the active element exists and is clicked outside of\n            if (dropdownRef.current !== null && !dropdownRef.current.contains(e.target)) {\n                setIsActive(!isActive);\n            }\n        };\n\n        //determine if the user is clicking something on the screen, \n        //and only while the menu is currently active.\n        if (isActive) {\n            window.addEventListener('click', pageClickEvent);\n        }\n\n        //unset event listener once dropdown closed\n        return () => {\n            window.removeEventListener('click', pageClickEvent);\n          }\n    }, [isActive]);\n  \n    return (\n      <div className=\"menu-container\">\n        {/* <button onClick={onClick} className=\"menu-trigger\"> */}\n          {/* <span>User</span> */}\n          {/* <img src=\"https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/df/df7789f313571604c0e4fb82154f7ee93d9989c6.jpg\" alt=\"User avatar\" /> */}\n        {/* </button> */}\n        \n        <button className=\"menu-trigger Burger\" onClick={onClick} >\n            <div className=\"burgclose\"/>\n            <div className= \"burgclose\"/>\n            <div className=\"burgclose\"/>\n        </button>\n        \n        <nav ref={dropdownRef} className={`menu ${isActive ? 'active' : 'inactive'}`}>\n          <ul>\n            {/* <li><a href=\"/messages\">Messages</a></li>\n            <li><a href=\"/trips\">Trips</a></li>\n            <li><a href=\"/saved\">Saved</a></li> */}\n\n                <li><Link to=\"/\" className=\"linkproducttype\" onClick={() => setIsActive(false)}>Home</Link></li>\n                <li><Link to=\"/newarrivals\" className=\"linkproducttype\" onClick={() => setIsActive(false)}>New Arrivals</Link></li>\n                <li><Link to=\"/tops\" className=\"linkproducttype\" onClick={() => setIsActive(false)}>Tops</Link></li>\n                <li><Link to=\"/shoes\" className=\"linkproducttype\" onClick={() => setIsActive(false)}>Shoes</Link></li>\n                <li><Link to=\"/accessories\" className=\"linkproducttype\" onClick={() => setIsActive(false)}>Accessories</Link></li>\n                <li><Link to=\"/outerwear\" className=\"linkproducttype\" onClick={() => setIsActive(false)}>Outerwear</Link></li>\n\n                \n                <li>\n                    <ul className=\"sidenavbottomlinkscontainer\">\n\n                        {\n                        \n                        userInfo ? (\n                            <li><Link to=\"/profile\" className=\"sidenavbottomlinks\" onClick={() => setIsActive(false)}>Your Profile</Link></li>\n                        ) : \n                        (\n                            <li><Link to=\"/register\" className=\"sidenavbottomlinks\" onClick={() => setIsActive(false)}>Create Account</Link></li>\n                        )\n\n                        }\n\n                        <li><Link to=\"/search\" className=\"sidenavbottomlinks\" onClick={() => setIsActive(false)}>Search<FaSearch /></Link></li>\n                        <li><Link to=\"/contact\" className=\"sidenavbottomlinks\" onClick={() => setIsActive(false)}>Contact</Link></li>\n                        <li><Link to=\"/policies\" className=\"sidenavbottomlinks\" onClick={() => setIsActive(false)}>Policies</Link></li>\n\n                    </ul>\n                </li>\n\n          </ul>\n\n        </nav>\n      </div>\n    );\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/Product2.js",["328","329"],"import React, {useState} from 'react'\nimport { Link } from 'react-router-dom'\n// import data from '../data/data.js'\n\n\nexport default function Product2(props) {\n    const {product} = props\n    const {name} = props\n\n    // const [id, setId] = useState([product.id]);\n    // const id = product._id\n\n    // const testing = props.location.search \n    //     ? props.location.search.split(\"=\")[1] \n    //     : \"/\";\n    // alert(testing)\n\n\n\n    return (\n        <div key={product._id} className=\"product\">\n            <Link to={`/product/${product._id}`}>\n            {/* <Link to={`/${name}/${product._id}`} name={name}> */}\n            {/* <Link to={`/productscreen/${product._id}`} id={id}> */}\n                <img className=\"image_prod\" src={product.image} alt={product.name}/>\n                <div className=\"itemstuff\">\n                    <h1 className=\"itemname\">{product._id}</h1>-\n                    <h1 className=\"itemname\">{product.name}</h1>-\n                    <h2 className=\"itemname\">{product.price}</h2>\n                </div>\n            </Link>  \n        </div>       \n    )\n}\n",["330","331"],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/constants/newArrivalsConstants.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/constants/orderConstants.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/constants/cartConstants.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/constants/productConstants.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/constants/userConstants.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/LeftNav.js",["332","333","334","335"],"import React, {useRef, useState, useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link} from 'react-router-dom';\nimport { FaSearch } from 'react-icons/fa';\n\n\nexport default function LeftNav({open, setOpen}) {\n    //If user is signed in will display users Name and also a link to Logout\n    const userSignin = useSelector(state => state.userSignin)\n    const { userInfo } = userSignin; \n\n    return (\n        <>\n            <ul className=\"linkslist\" open={open} style={{ transform: open ? 'translateX(0%)' : 'translateX(-100%)' }}>\n                {/* <div className=\"burg\" style={{ backgroundColor: open ? '#333' : '#ccc' }} /> */}\n\n                <li><Link to=\"/\" className=\"linkproducttype\" onClick={() => setOpen(false)}>Home</Link></li>\n                <li><Link to=\"/newarrivals\" className=\"linkproducttype\" onClick={() => setOpen(false)}>New Arrivals</Link></li>\n                <li><Link to=\"/tops\" className=\"linkproducttype\" onClick={() => setOpen(false)}>Tops</Link></li>\n                <li><Link to=\"/bottoms\" className=\"linkproducttype\" onClick={() => setOpen(false)}>Bottoms</Link></li>\n                <li><Link to=\"/accessories\" className=\"linkproducttype\" onClick={() => setOpen(false)}>Accessories</Link></li>\n\n                \n                <li>\n                    <ul className=\"sidenavbottomlinkscontainer\">\n\n                        {\n                        \n                        userInfo ? (\n                            <li><Link to=\"/profile\" className=\"sidenavbottomlinks\">Your Profile</Link></li>\n                        ) : \n                        (\n                            <li><Link to=\"/register\" className=\"sidenavbottomlinks\">Create Account</Link></li>\n                        )\n\n                        }\n\n                        <li><Link to=\"/search\" className=\"sidenavbottomlinks\">Search<FaSearch /></Link></li>\n                        <li><Link to=\"/policies\" className=\"sidenavbottomlinks\">Policies</Link></li>\n\n                    </ul>\n                </li>\n            </ul>\n        </>\n    )\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/Paypal.js",["336","337","338","339","340","341","342","343","344","345"],"//paypal button component\n//we created payal button in index.html\n\nimport React, {useEffect, useRef} from 'react'\nimport Axios from 'axios';\nimport { detailsOrder, payOrder } from '../actions/orderActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport SuccessPayScreen from './SuccessPayScreen';\n\nexport default function Paypal(props) {\n    // const {successPaymentHandler} = props\n    // const {checkout, setCheckout} = props\n\n\n    const orderDetails = useSelector((state) => state.orderDetails);\n    const { order, loading, error } = orderDetails;\n\n    //get orderPay from redux\n    const orderPay = useSelector((state) => state.orderPay);\n    //rename error to errorPay\n    const {\n        loading: loadingPay,\n        error: errorPay, \n        success: successPay,\n    } = orderPay;\n\n    const dispatch = useDispatch();\n\n    //grab paypal button from index.html. access from useRef\n    const paypal = useRef()\n\n    //when u render page render all functionalities of paypal button\n    useEffect(() => {\n        window.paypal.Buttons({\n            createOrder: (data, actions, err) => {\n                //create an order\n                return actions.order.create({\n                    intent: \"CAPTURE\",\n                    purchase_units: [\n                        {\n                            description: \"Cool looking table\",\n                            amount: {\n                                currency_code: \"USD\",\n                                // value: 650.00\n                                value: order.totalPrice\n                            }\n                        }\n                    ]\n                })\n            },\n            //callback functions to do something if order approves\n            onApprove: async (data, actions) => {\n                const orderr = await actions.order.capture()\n                console.log('orderr:', orderr)\n                // const paymentResult = await actions.order.capture()\n                // console.log('order:', order)\n\n                const paymentResult = {}\n                paymentResult.email = orderr.payer.email_address\n                paymentResult.id = orderr.id\n                paymentResult.status = orderr.status\n                paymentResult.update_time = orderr.update_time\n                console.log('paymentResult:', paymentResult)\n                dispatch(payOrder(order, paymentResult))\n                // setCheckout(false)\n\n\n                // return (\n                //     <SuccessPayScreen />\n                // )\n\n                // dispatch(payOrder(order))\n            },\n            onError: (err) => {\n                console.log(err)\n            }\n        })\n        .render(paypal.current)\n    }, [])\n\n    return (\n        <div>\n            {\n                !order.isPaid ? (\n                    <div ref={paypal}></div>\n                ) : (\n                    <h3>order has been paid</h3>\n                )\n            }\n        </div>\n    )\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/SuccessPayScreen.js",[],["346","347"],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/OrderHistoryScreen.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/ProfileScreen.js",[],"/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/PrivateRoute.js",["348"],"//define private route bc unauthorized user shouldnt see profilescreen\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\n\n\nexport default function PrivateRoute({component: Component, ...rest}) {\n    //get user info\n    const userSignin = useSelector((state) => state.userSignin)\n    const {userInfo} = userSignin;\n\n    // pass the ...rest parameters of the original route and define a \n    // render funct. in render funct check user info, if it does exist \n    // render component (this is the component we define in the router \n    // in APP.js), and pass props to it.  redirect user to signin screen bc \n    //user should be logged in to see this page    \n    return (\n        <Route \n            {...rest} \n            render={(props) => \n                userInfo ? \n                    //Will ONLY render the component if user is signed in\n                    (<Component {...props}></Component>) \n                    : \n                    (<Redirect to=\"/account\"/>)\n            }\n        ></Route>\n    )\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/components/ProductSearch.js",["349","350","351","352","353","354","355","356","357"],"import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Product from '../screens/Product'\nimport LoadingBox from './LoadingBox.js';\nimport MessageBox from './MessageBox.js';\nimport { listProducts } from '../actions/productActions';\n\nexport default function ProductSearch({data, searchname, searchedProducts}) {\n\n    const dispatch = useDispatch();\n    const searchProduct = useSelector((state) => state.searchProduct)\n    const { loading, error, products } = searchProduct\n\n    // useEffect(() => {\n\n    //     // refreshPage()\n\n    //     //dispatch action\n    //     dispatch(listProducts())\n    //     // products = Array.from(data);\n\n    // }, [dispatch])\n\n\n    return (\n        <div>\n            <h1>searchstuff here</h1>\n                {\n                    <div className=\"favoriterroducts\">\n\n                        { \n                            searchedProducts.map((product) => (\n                                    <Product key={product._id} product={product} searchname={searchname}></Product>\n                                )  \n                            )\n                        }\n\n                    </div>\n                }\n        </div>\n    )\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/Shoes.js",["358","359","360","361","362","363"],"import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom';\nimport '../App.css';\n// import data from '../data.js'\n// import data from '../data/newarrivalsdata.js'  //STATIC DATA\nimport Product from './Product';\nimport NewArrival from './NewArrival';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport MessageBox from '../components/MessageBox';\nimport LoadingBox from '../components/LoadingBox.js';\nimport { listArrivals, listProducts, listShoes, listTops } from '../actions/productActions';\n\n\nexport default function Shoes(props) {\n\n    let name = \"shoes\"\n\n    //REDUX Part:\n\n    //define dispatch\n    //dispatch allows u to dispatch any redux action\n    const dispatch = useDispatch();\n\n    //productList from Redux Store\n    //useSelector used to get object from reduxstore\n    const productList = useSelector((state) => state.productList)\n\n    //get 3 values from product list\n    const { loading, error, products } = productList\n\n    useEffect(() => {\n        //dispatch action\n        dispatch(listShoes())\n    }, [dispatch])\n    // }, [])\n\n\n    return (\n        <div className=\"favorites\">\n            <h1>Shoes</h1>\n            <div className=\"favorites\">\n\n\n                {\n                    loading ? (<LoadingBox></LoadingBox>)\n                    :\n                    error ? (<MessageBox variant=\"danger\">{error}</MessageBox>)\n                    : (\n                        <div className=\"favoriterroducts\">\n                            { \n                                products.map((product) => (\n                                        <Product key={product._id} product={product} name={name}></Product>\n                                    )  \n                            )\n                            }\n                        </div>\n                    )\n                }\n\n\n\n            </div>\n        </div>\n    )\n}\n","/Users/thomascoenen/Documents/BusinessProjects/Ecommerce/client/src/screens/Accessories.js",["364","365","366","367","368","369"],"import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom';\nimport '../App.css';\n// import data from '../data.js'\n// import data from '../data/newarrivalsdata.js'  //STATIC DATA\nimport Product from './Product';\nimport NewArrival from './NewArrival';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport MessageBox from '../components/MessageBox';\nimport LoadingBox from '../components/LoadingBox.js';\nimport { listAccessories, listArrivals, listProducts, listTops } from '../actions/productActions';\n\n\nexport default function Accessories(props) {\n\n    let name = \"accessories\"\n\n    //REDUX Part:\n\n    //define dispatch\n    //dispatch allows u to dispatch any redux action\n    const dispatch = useDispatch();\n\n    //productList from Redux Store\n    //useSelector used to get object from reduxstore\n    const productList = useSelector((state) => state.productList)\n\n    //get 3 values from product list\n    const { loading, error, products } = productList\n\n    useEffect(() => {\n        //dispatch action\n        dispatch(listAccessories())\n    }, [dispatch])\n    // }, [])\n\n\n    return (\n        <div className=\"favorites\">\n            <h1>Accessories</h1>\n            <div className=\"favorites\">\n\n\n                {\n                    loading ? (<LoadingBox></LoadingBox>)\n                    :\n                    error ? (<MessageBox variant=\"danger\">{error}</MessageBox>)\n                    : (\n                        <div className=\"favoriterroducts\">\n                            { \n                                products.map((product) => (\n                                        <Product key={product._id} product={product} name={name}></Product>\n                                    )  \n                            )\n                            }\n                        </div>\n                    )\n                }\n\n\n\n            </div>\n        </div>\n    )\n}\n",{"ruleId":"370","replacedBy":"371"},{"ruleId":"372","replacedBy":"373"},{"ruleId":"374","severity":1,"message":"375","line":24,"column":32,"nodeType":"376","messageId":"377","endLine":24,"endColumn":38},{"ruleId":"374","severity":1,"message":"378","line":24,"column":40,"nodeType":"376","messageId":"377","endLine":24,"endColumn":44},{"ruleId":"374","severity":1,"message":"379","line":25,"column":10,"nodeType":"376","messageId":"377","endLine":25,"endColumn":21},{"ruleId":"374","severity":1,"message":"380","line":25,"column":23,"nodeType":"376","messageId":"377","endLine":25,"endColumn":34},{"ruleId":"374","severity":1,"message":"381","line":27,"column":8,"nodeType":"376","messageId":"377","endLine":27,"endColumn":10},{"ruleId":"374","severity":1,"message":"382","line":33,"column":8,"nodeType":"376","messageId":"377","endLine":33,"endColumn":25},{"ruleId":"374","severity":1,"message":"383","line":34,"column":10,"nodeType":"376","messageId":"377","endLine":34,"endColumn":17},{"ruleId":"374","severity":1,"message":"384","line":43,"column":10,"nodeType":"376","messageId":"377","endLine":43,"endColumn":13},{"ruleId":"374","severity":1,"message":"385","line":44,"column":10,"nodeType":"376","messageId":"377","endLine":44,"endColumn":23},{"ruleId":"374","severity":1,"message":"386","line":45,"column":11,"nodeType":"376","messageId":"377","endLine":45,"endColumn":22},{"ruleId":"374","severity":1,"message":"387","line":45,"column":25,"nodeType":"376","messageId":"377","endLine":45,"endColumn":36},{"ruleId":"374","severity":1,"message":"388","line":52,"column":30,"nodeType":"376","messageId":"377","endLine":52,"endColumn":39},{"ruleId":"374","severity":1,"message":"389","line":52,"column":41,"nodeType":"376","messageId":"377","endLine":52,"endColumn":55},{"ruleId":"374","severity":1,"message":"390","line":52,"column":57,"nodeType":"376","messageId":"377","endLine":52,"endColumn":65},{"ruleId":"374","severity":1,"message":"391","line":52,"column":67,"nodeType":"376","messageId":"377","endLine":52,"endColumn":77},{"ruleId":"374","severity":1,"message":"392","line":52,"column":105,"nodeType":"376","messageId":"377","endLine":52,"endColumn":116},{"ruleId":"374","severity":1,"message":"393","line":53,"column":10,"nodeType":"376","messageId":"377","endLine":53,"endColumn":16},{"ruleId":"374","severity":1,"message":"394","line":58,"column":8,"nodeType":"376","messageId":"377","endLine":58,"endColumn":26},{"ruleId":"374","severity":1,"message":"395","line":74,"column":10,"nodeType":"376","messageId":"377","endLine":74,"endColumn":14},{"ruleId":"374","severity":1,"message":"396","line":9,"column":10,"nodeType":"376","messageId":"377","endLine":9,"endColumn":32},{"ruleId":"374","severity":1,"message":"397","line":9,"column":34,"nodeType":"376","messageId":"377","endLine":9,"endColumn":59},{"ruleId":"374","severity":1,"message":"398","line":71,"column":7,"nodeType":"376","messageId":"377","endLine":71,"endColumn":22},{"ruleId":"374","severity":1,"message":"399","line":72,"column":7,"nodeType":"376","messageId":"377","endLine":72,"endColumn":23},{"ruleId":"374","severity":1,"message":"400","line":2,"column":8,"nodeType":"376","messageId":"377","endLine":2,"endColumn":13},{"ruleId":"374","severity":1,"message":"401","line":7,"column":8,"nodeType":"376","messageId":"377","endLine":7,"endColumn":12},{"ruleId":"374","severity":1,"message":"402","line":11,"column":8,"nodeType":"376","messageId":"377","endLine":11,"endColumn":18},{"ruleId":"374","severity":1,"message":"403","line":18,"column":8,"nodeType":"376","messageId":"377","endLine":18,"endColumn":17},{"ruleId":"374","severity":1,"message":"404","line":19,"column":8,"nodeType":"376","messageId":"377","endLine":19,"endColumn":14},{"ruleId":"374","severity":1,"message":"405","line":20,"column":10,"nodeType":"376","messageId":"377","endLine":20,"endColumn":20},{"ruleId":"374","severity":1,"message":"406","line":108,"column":15,"nodeType":"376","messageId":"377","endLine":108,"endColumn":21},{"ruleId":"374","severity":1,"message":"407","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":23},{"ruleId":"374","severity":1,"message":"408","line":4,"column":8,"nodeType":"376","messageId":"377","endLine":4,"endColumn":10},{"ruleId":"374","severity":1,"message":"409","line":6,"column":8,"nodeType":"376","messageId":"377","endLine":6,"endColumn":12},{"ruleId":"374","severity":1,"message":"410","line":11,"column":8,"nodeType":"376","messageId":"377","endLine":11,"endColumn":18},{"ruleId":"374","severity":1,"message":"378","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":14},{"ruleId":"374","severity":1,"message":"411","line":8,"column":26,"nodeType":"376","messageId":"377","endLine":8,"endColumn":44},{"ruleId":"374","severity":1,"message":"412","line":8,"column":46,"nodeType":"376","messageId":"377","endLine":8,"endColumn":57},{"ruleId":"374","severity":1,"message":"413","line":1,"column":16,"nodeType":"376","messageId":"377","endLine":1,"endColumn":24},{"ruleId":"374","severity":1,"message":"413","line":1,"column":16,"nodeType":"376","messageId":"377","endLine":1,"endColumn":24},{"ruleId":"374","severity":1,"message":"378","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":14},{"ruleId":"374","severity":1,"message":"414","line":7,"column":8,"nodeType":"376","messageId":"377","endLine":7,"endColumn":18},{"ruleId":"374","severity":1,"message":"415","line":12,"column":10,"nodeType":"376","messageId":"377","endLine":12,"endColumn":22},{"ruleId":"374","severity":1,"message":"416","line":12,"column":24,"nodeType":"376","messageId":"377","endLine":12,"endColumn":36},{"ruleId":"374","severity":1,"message":"413","line":1,"column":16,"nodeType":"376","messageId":"377","endLine":1,"endColumn":24},{"ruleId":"374","severity":1,"message":"378","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":14},{"ruleId":"374","severity":1,"message":"414","line":8,"column":8,"nodeType":"376","messageId":"377","endLine":8,"endColumn":18},{"ruleId":"374","severity":1,"message":"417","line":11,"column":10,"nodeType":"376","messageId":"377","endLine":11,"endColumn":25},{"ruleId":"374","severity":1,"message":"416","line":14,"column":24,"nodeType":"376","messageId":"377","endLine":14,"endColumn":36},{"ruleId":"374","severity":1,"message":"378","line":3,"column":10,"nodeType":"376","messageId":"377","endLine":3,"endColumn":14},{"ruleId":"374","severity":1,"message":"418","line":9,"column":10,"nodeType":"376","messageId":"377","endLine":9,"endColumn":24},{"ruleId":"374","severity":1,"message":"411","line":9,"column":26,"nodeType":"376","messageId":"377","endLine":9,"endColumn":44},{"ruleId":"374","severity":1,"message":"412","line":9,"column":46,"nodeType":"376","messageId":"377","endLine":9,"endColumn":57},{"ruleId":"374","severity":1,"message":"395","line":16,"column":12,"nodeType":"376","messageId":"377","endLine":16,"endColumn":16},{"ruleId":"374","severity":1,"message":"419","line":2,"column":8,"nodeType":"376","messageId":"377","endLine":2,"endColumn":13},{"ruleId":"374","severity":1,"message":"420","line":8,"column":24,"nodeType":"376","messageId":"377","endLine":8,"endColumn":32},{"ruleId":"374","severity":1,"message":"421","line":21,"column":11,"nodeType":"376","messageId":"377","endLine":21,"endColumn":17},{"ruleId":"374","severity":1,"message":"422","line":4,"column":8,"nodeType":"376","messageId":"377","endLine":4,"endColumn":18},{"ruleId":"374","severity":1,"message":"407","line":5,"column":10,"nodeType":"376","messageId":"377","endLine":5,"endColumn":23},{"ruleId":"374","severity":1,"message":"423","line":5,"column":25,"nodeType":"376","messageId":"377","endLine":5,"endColumn":30},{"ruleId":"374","severity":1,"message":"375","line":5,"column":32,"nodeType":"376","messageId":"377","endLine":5,"endColumn":38},{"ruleId":"374","severity":1,"message":"424","line":8,"column":8,"nodeType":"376","messageId":"377","endLine":8,"endColumn":15},{"ruleId":"374","severity":1,"message":"425","line":9,"column":8,"nodeType":"376","messageId":"377","endLine":9,"endColumn":14},{"ruleId":"374","severity":1,"message":"426","line":10,"column":10,"nodeType":"376","messageId":"377","endLine":10,"endColumn":18},{"ruleId":"374","severity":1,"message":"427","line":10,"column":20,"nodeType":"376","messageId":"377","endLine":10,"endColumn":28},{"ruleId":"374","severity":1,"message":"391","line":10,"column":67,"nodeType":"376","messageId":"377","endLine":10,"endColumn":77},{"ruleId":"374","severity":1,"message":"428","line":10,"column":79,"nodeType":"376","messageId":"377","endLine":10,"endColumn":90},{"ruleId":"374","severity":1,"message":"429","line":10,"column":92,"nodeType":"376","messageId":"377","endLine":10,"endColumn":103},{"ruleId":"374","severity":1,"message":"392","line":10,"column":105,"nodeType":"376","messageId":"377","endLine":10,"endColumn":116},{"ruleId":"374","severity":1,"message":"430","line":4,"column":8,"nodeType":"376","messageId":"377","endLine":4,"endColumn":21},{"ruleId":"374","severity":1,"message":"402","line":6,"column":8,"nodeType":"376","messageId":"377","endLine":6,"endColumn":18},{"ruleId":"374","severity":1,"message":"431","line":14,"column":12,"nodeType":"376","messageId":"377","endLine":14,"endColumn":16},{"ruleId":"374","severity":1,"message":"432","line":14,"column":18,"nodeType":"376","messageId":"377","endLine":14,"endColumn":25},{"ruleId":"374","severity":1,"message":"433","line":19,"column":12,"nodeType":"376","messageId":"377","endLine":19,"endColumn":17},{"ruleId":"374","severity":1,"message":"434","line":19,"column":19,"nodeType":"376","messageId":"377","endLine":19,"endColumn":27},{"ruleId":"374","severity":1,"message":"435","line":27,"column":23,"nodeType":"376","messageId":"377","endLine":27,"endColumn":30},{"ruleId":"374","severity":1,"message":"436","line":27,"column":32,"nodeType":"376","messageId":"377","endLine":27,"endColumn":37},{"ruleId":"374","severity":1,"message":"413","line":1,"column":16,"nodeType":"376","messageId":"377","endLine":1,"endColumn":24},{"ruleId":"437","severity":1,"message":"438","line":34,"column":8,"nodeType":"439","endLine":34,"endColumn":34,"suggestions":"440"},{"ruleId":"374","severity":1,"message":"441","line":1,"column":17,"nodeType":"376","messageId":"377","endLine":1,"endColumn":26},{"ruleId":"374","severity":1,"message":"442","line":6,"column":12,"nodeType":"376","messageId":"377","endLine":6,"endColumn":17},{"ruleId":"374","severity":1,"message":"413","line":1,"column":16,"nodeType":"376","messageId":"377","endLine":1,"endColumn":24},{"ruleId":"374","severity":1,"message":"413","line":1,"column":16,"nodeType":"376","messageId":"377","endLine":1,"endColumn":24},{"ruleId":"374","severity":1,"message":"379","line":6,"column":10,"nodeType":"376","messageId":"377","endLine":6,"endColumn":21},{"ruleId":"374","severity":1,"message":"443","line":11,"column":8,"nodeType":"376","messageId":"377","endLine":11,"endColumn":15},{"ruleId":"374","severity":1,"message":"413","line":1,"column":16,"nodeType":"376","messageId":"377","endLine":1,"endColumn":24},{"ruleId":"374","severity":1,"message":"395","line":8,"column":12,"nodeType":"376","messageId":"377","endLine":8,"endColumn":16},{"ruleId":"370","replacedBy":"444"},{"ruleId":"372","replacedBy":"445"},{"ruleId":"374","severity":1,"message":"446","line":1,"column":16,"nodeType":"376","messageId":"377","endLine":1,"endColumn":22},{"ruleId":"374","severity":1,"message":"413","line":1,"column":24,"nodeType":"376","messageId":"377","endLine":1,"endColumn":32},{"ruleId":"374","severity":1,"message":"441","line":1,"column":34,"nodeType":"376","messageId":"377","endLine":1,"endColumn":43},{"ruleId":"374","severity":1,"message":"379","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":21},{"ruleId":"374","severity":1,"message":"419","line":5,"column":8,"nodeType":"376","messageId":"377","endLine":5,"endColumn":13},{"ruleId":"374","severity":1,"message":"447","line":6,"column":10,"nodeType":"376","messageId":"377","endLine":6,"endColumn":22},{"ruleId":"374","severity":1,"message":"378","line":8,"column":10,"nodeType":"376","messageId":"377","endLine":8,"endColumn":14},{"ruleId":"374","severity":1,"message":"448","line":9,"column":8,"nodeType":"376","messageId":"377","endLine":9,"endColumn":24},{"ruleId":"374","severity":1,"message":"435","line":17,"column":20,"nodeType":"376","messageId":"377","endLine":17,"endColumn":27},{"ruleId":"374","severity":1,"message":"436","line":17,"column":29,"nodeType":"376","messageId":"377","endLine":17,"endColumn":34},{"ruleId":"374","severity":1,"message":"449","line":23,"column":18,"nodeType":"376","messageId":"377","endLine":23,"endColumn":28},{"ruleId":"374","severity":1,"message":"450","line":24,"column":16,"nodeType":"376","messageId":"377","endLine":24,"endColumn":24},{"ruleId":"374","severity":1,"message":"451","line":25,"column":18,"nodeType":"376","messageId":"377","endLine":25,"endColumn":28},{"ruleId":"437","severity":1,"message":"452","line":80,"column":8,"nodeType":"439","endLine":80,"endColumn":10,"suggestions":"453"},{"ruleId":"370","replacedBy":"454"},{"ruleId":"372","replacedBy":"455"},{"ruleId":"374","severity":1,"message":"379","line":3,"column":10,"nodeType":"376","messageId":"377","endLine":3,"endColumn":21},{"ruleId":"374","severity":1,"message":"441","line":1,"column":17,"nodeType":"376","messageId":"377","endLine":1,"endColumn":26},{"ruleId":"374","severity":1,"message":"413","line":1,"column":28,"nodeType":"376","messageId":"377","endLine":1,"endColumn":36},{"ruleId":"374","severity":1,"message":"402","line":4,"column":8,"nodeType":"376","messageId":"377","endLine":4,"endColumn":18},{"ruleId":"374","severity":1,"message":"456","line":5,"column":8,"nodeType":"376","messageId":"377","endLine":5,"endColumn":18},{"ruleId":"374","severity":1,"message":"416","line":6,"column":10,"nodeType":"376","messageId":"377","endLine":6,"endColumn":22},{"ruleId":"374","severity":1,"message":"457","line":10,"column":11,"nodeType":"376","messageId":"377","endLine":10,"endColumn":19},{"ruleId":"374","severity":1,"message":"435","line":12,"column":13,"nodeType":"376","messageId":"377","endLine":12,"endColumn":20},{"ruleId":"374","severity":1,"message":"436","line":12,"column":22,"nodeType":"376","messageId":"377","endLine":12,"endColumn":27},{"ruleId":"374","severity":1,"message":"458","line":12,"column":29,"nodeType":"376","messageId":"377","endLine":12,"endColumn":37},{"ruleId":"374","severity":1,"message":"413","line":1,"column":16,"nodeType":"376","messageId":"377","endLine":1,"endColumn":24},{"ruleId":"374","severity":1,"message":"378","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":14},{"ruleId":"374","severity":1,"message":"414","line":7,"column":8,"nodeType":"376","messageId":"377","endLine":7,"endColumn":18},{"ruleId":"374","severity":1,"message":"415","line":12,"column":10,"nodeType":"376","messageId":"377","endLine":12,"endColumn":22},{"ruleId":"374","severity":1,"message":"416","line":12,"column":24,"nodeType":"376","messageId":"377","endLine":12,"endColumn":36},{"ruleId":"374","severity":1,"message":"459","line":12,"column":49,"nodeType":"376","messageId":"377","endLine":12,"endColumn":57},{"ruleId":"374","severity":1,"message":"413","line":1,"column":16,"nodeType":"376","messageId":"377","endLine":1,"endColumn":24},{"ruleId":"374","severity":1,"message":"378","line":2,"column":10,"nodeType":"376","messageId":"377","endLine":2,"endColumn":14},{"ruleId":"374","severity":1,"message":"414","line":7,"column":8,"nodeType":"376","messageId":"377","endLine":7,"endColumn":18},{"ruleId":"374","severity":1,"message":"415","line":12,"column":27,"nodeType":"376","messageId":"377","endLine":12,"endColumn":39},{"ruleId":"374","severity":1,"message":"416","line":12,"column":41,"nodeType":"376","messageId":"377","endLine":12,"endColumn":53},{"ruleId":"374","severity":1,"message":"459","line":12,"column":55,"nodeType":"376","messageId":"377","endLine":12,"endColumn":63},"no-native-reassign",["460"],"no-negated-in-lhs",["461"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'p2' is defined but never used.","'NewArrivalsScreen' is defined but never used.","'signout' is defined but never used.","'fab' is defined but never used.","'faCheckSquare' is defined but never used.","'faFacebookF' is defined but never used.","'faInstagram' is defined but never used.","'FaUserAlt' is defined but never used.","'FaShoppingCart' is defined but never used.","'FaSearch' is defined but never used.","'FaCartPlus' is defined but never used.","'FaCopyright' is defined but never used.","'SiVisa' is defined but never used.","'OtherProductScreen' is defined but never used.","'name' is assigned a value but never used.","'newArrivalsListReducer' is defined but never used.","'newArrivalsDetailsReducer' is defined but never used.","'composeEnhancer' is assigned a value but never used.","'composeEnhancers' is assigned a value but never used.","'axios' is defined but never used.","'main' is defined but never used.","'LoadingBox' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'result' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'p1' is defined but never used.","'data' is defined but never used.","'Homescreen' is defined but never used.","'detailsNewArrivals' is defined but never used.","'detailsTops' is defined but never used.","'useState' is defined but never used.","'NewArrival' is defined but never used.","'listArrivals' is defined but never used.","'listProducts' is defined but never used.","'listNewArrivals' is defined but never used.","'detailsProduct' is defined but never used.","'Axios' is defined but never used.","'payOrder' is defined but never used.","'paypal' is assigned a value but never used.","'CartScreen' is defined but never used.","'Route' is defined but never used.","'Account' is defined but never used.","'Search' is defined but never used.","'FaPaypal' is defined but never used.","'FaCcVisa' is defined but never used.","'FaInstagram' is defined but never used.","'FaFacebookF' is defined but never used.","'ProductSearch' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'query' is assigned a value but never used.","'setQuery' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.","ArrayExpression",["462"],"'useEffect' is defined but never used.","'email' is assigned a value but never used.","'LeftNav' is defined but never used.",["460"],["461"],"'useRef' is defined but never used.","'detailsOrder' is defined but never used.","'SuccessPayScreen' is defined but never used.","'loadingPay' is assigned a value but never used.","'errorPay' is assigned a value but never used.","'successPay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'order'. Either include them or remove the dependency array.",["463"],["460"],["461"],"'MessageBox' is defined but never used.","'dispatch' is assigned a value but never used.","'products' is assigned a value but never used.","'listTops' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},"Update the dependencies array to be: [dispatch, name, productId, qty]",{"range":"468","text":"469"},"Update the dependencies array to be: [dispatch, order]",{"range":"470","text":"471"},[1274,1300],"[dispatch, name, productId, qty]",[2756,2758],"[dispatch, order]"]